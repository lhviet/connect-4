.form-inline.justify-content-end
  .pr-3 ASCII mode
  button.btn.btn-outline-secondary.btn-sm([class.active]='!isPresentationMode', (click)='onClickPresentMode()')
    i.fa.fa-code
.game-board.my-3
  .game-table
    table.table.table-bordered((mouseleave)='onMouseLeave()')
      thead
        tr
          th.text-center
            i.fa.fa-arrow-down([class.active]='hoveringCol === 0')
          th.text-center
            i.fa.fa-arrow-down([class.active]='hoveringCol === 1')
          th.text-center
            i.fa.fa-arrow-down([class.active]='hoveringCol === 2')
          th.text-center
            i.fa.fa-arrow-down([class.active]='hoveringCol === 3')
          th.text-center
            i.fa.fa-arrow-down([class.active]='hoveringCol === 4')
          th.text-center
            i.fa.fa-arrow-down([class.active]='hoveringCol === 5')
          th.text-center
            i.fa.fa-arrow-down([class.active]='hoveringCol === 6')
      tbody
        tr(*ngFor='let row of gameMatrix')
          td.text-center.align-middle(*ngFor='let coin of row; let i = index;',
          [class.win]='winCoinPositions && winCoinPositions.indexOf(coin.position) > -1',
          (click)='onCoinClicked(coin)',
          (mouseenter)='onMouseEnter(i)')
            app-game-coin(*ngIf='isPresentationMode',
            [coin]='coin',
            [isAvailable]='availablePositionSet.has(coin.position)')
            span(*ngIf='!isPresentationMode', [class.font-weight-bold]='coin.state > 1') {{coin.state}}
